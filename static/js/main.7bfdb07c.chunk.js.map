{"version":3,"sources":["utilities/fetchGameData.js","components/prodivers/GameStateProvider.js","components/drawers/HistoryDrawer.js","components/prodivers/LiveDataProvider.js","hooks/useLiveData.js","components/PlayerStats.js","components/actions/AliveActions.js","components/actions/DeadActions.js","components/actions/ActionPrompt.js","components/TankSpace.js","hooks/useQuery.js","components/PlayerData.js","components/gameboard/GameBoard.js","utilities/getDistanceBetweenPositions.js","components/drawers/JuryDrawer.js","components/toggles/RangeToggle.js","components/toggles/DarkModeToggle.js","components/drawers/MenuDrawer.js","components/drawers/StatDrawer.js","components/timers/Ceasefire.js","components/timers/Resupply.js","components/AppBody.js","components/Login.js","components/ValidIDWrapper.js","hooks/useIsValidID.js","components/KeyEventListener.js","Router.js","App.js","index.js"],"names":["baseURL","idCheckExtension","gameStateExtension","checkValidId","id","a","axios","get","catch","response","status","newGameState","data","GameStateContext","createContext","player","name","supply","health","GameStateProvider","children","useParams","useState","gameState","setGameState","socket","setSocket","isLoading","setIsLoading","history","useHistory","enqueueSnackbar","useSnackbar","useEffect","getGameState","then","finally","sock","socketClient","on","emit","message","lastMessage","length","variant","action","autoHideDuration","push","Provider","value","HistoryDrawer","open","setOpen","useContext","classes","useStyles","Drawer","anchor","onClose","paper","drawer","Paper","className","container","map","historyEntry","ReactTimeAgo","tooltip","date","Date","time","locale","reverse","makeStyles","backgroundColor","height","padding","margin","LiveDataContext","LiveDataProvider","sendAction","type","targetSpace","upgrades","actor","useLiveData","PlayerStats","votes","vertical","playerInfo","Typography","align","statContainer","stat","src","img","alt","undefined","display","flexDirection","alignSelf","placeContent","flexWrap","maxHeight","maxWidth","AliveActions","position","setAction","y","x","playerAtPosition","userData","filter","playerData","actionCost","useMemo","shotDistanceX","Math","abs","shotDistanceY","max","disabled","submitDisabled","targetingSelf","availableUpgrades","FormControl","component","FormLabel","RadioGroup","row","onChange","event","target","FormControlLabel","control","Radio","color","label","labelPlacement","bottomContainer","submitContainer","loadingButtonContainer","Button","onClick","CircularProgress","size","buttonProgress","submitErrorMessage","comparisonContainer","icon","green","top","left","marginTop","marginLeft","DeadActions","style","votesForToday","wrapWithActionPrompt","ActionPrompt","anchorEl","setAnchorEl","currentTarget","ClickAwayListener","onClickAway","Popper","transition","TransitionProps","Fade","alive","width","transform","TankSpace","topContainer","Hidden","smDown","mdDown","flex","useQuery","params","URLSearchParams","useLocation","search","updateParams","replace","toString","wrapWithPlayerData","PlayerData","GameBoard","gridLayout","isDarkMode","has","gridColor","stripeFactory","stripeColor","backgroundColors","components","generateInternalComponents","background","border","spectator","distanceFromPlayer","pos1","pos2","distanceBetweenX","distanceBetweenY","getDistanceBetweenPositions","wrapper","itemToPush","textAlign","cursor","boxSizing","blankSpace","indexNum","bounds","i","containerGrid","gridTemplateColumns","gridTemplateRows","minWidth","JuryDrawer","deadPlayers","user","alivePlayers","Divider","playerName","Chip","chip","justifyContent","marginRight","RangeToggle","text","Switch","checked","set","delete","inputProps","DarkModeToggle","MenuDrawer","setIsOpen","setIsJuryOpen","setIsStatsOpen","setIsHistoryOpen","List","ListItem","button","ListItemIcon","ListItemText","primary","StatDrawer","isOpen","gridContainer","kills","Ceasefire","ceasefire","active","nextEventTime","end","start","parse","Resupply","nextResupplyTime","AppBody","historyDrawerOpen","setHistoryDrawerOpen","juryDrawerOpen","setJuryDrawerOpen","menuDrawerOpen","setMenuDrawerOpen","statsDrawerOpen","setStatsDrawerOpen","AppBar","IconButton","Login","setValue","validID","setValidID","errorMessage","setErrorMessage","e","keyCode","TextField","onKeyDown","error","helperText","to","ValidIdWrapper","isValidID","setIsValidId","result","useIsValidID","KeyEventListener","handleKeyDown","useCallback","code","document","addEventListener","removeEventListener","AppRouter","exact","path","anchorOrigin","horizontal","App","TimeAgo","addDefaultLocale","en","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.7bfdb07c.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst baseURL = \"https://TankTacticsService.drewcolgin.repl.co/\";\nconst idCheckExtension = \"api/check/\"\nconst gameStateExtension = \"api/gamestate/\"\n\nexport async function checkValidId(id) {\n    const response = await axios.get(`${baseURL}${idCheckExtension}${id}`).catch(() => false)\n    return response.status === 200;\n}\n\nexport async function getGameState(id) {\n    const newGameState = await axios.get(`${baseURL}${gameStateExtension}${id}`)\n    return newGameState.data;\n}","import {createContext, useEffect, useState} from \"react\";\nimport {getGameState} from \"../../utilities/fetchGameData\";\nimport {useHistory, useParams} from \"react-router-dom\";\nimport {useSnackbar} from \"notistack\";\nimport socketClient from \"socket.io-client\";\n\nexport const GameStateContext = createContext({player: {name: 'loading', supply: 0, health: 0}});\n\nconst wsURL = \"https://TankTacticsService.drewcolgin.repl.co\";\n\nexport default function GameStateProvider({ children }) {\n    const { id } = useParams();\n    const [gameState, setGameState] = useState();\n    const [socket, setSocket] = useState();\n    const [isLoading, setIsLoading] = useState(true);\n    let history = useHistory();\n    const {enqueueSnackbar} = useSnackbar();\n    \n    useEffect(() => {\n        setIsLoading(true);\n        getGameState(id).then((gameState) => setGameState(gameState)).finally(() => setIsLoading(false));\n    }, [id]);\n\n    useEffect(() => {\n        const sock = socketClient(wsURL)\n\n\n        sock.on('connect', async () => {\n            setSocket(sock);\n            sock.emit('register', id)\n        });\n\n        sock.on('gameStateUpdate', (message) => {\n            setGameState(message);\n\n            if (message && message.history) {\n                const lastMessage = message.history[message.history.length - 1]\n                enqueueSnackbar(lastMessage.message, {variant: 'info'})\n            }\n            setIsLoading(false);\n        })\n\n        sock.on('invalid', (message) => {\n            enqueueSnackbar(`Invalid ${message.action} Action`, {variant: 'error', autoHideDuration: 1000})\n            setIsLoading(false);\n        })\n\n        sock.on('unlog', () => {\n            history.push('/')\n        })\n\n    }, [enqueueSnackbar, history, id, setGameState])\n\n    return (\n        <GameStateContext.Provider value={{gameState, setGameState, socket, isLoading, setIsLoading}}>\n            {children}\n        </GameStateContext.Provider>\n    )\n}","import {useContext} from \"react\";\nimport {GameStateContext} from \"../prodivers/GameStateProvider\";\nimport {Drawer, makeStyles, Paper} from \"@material-ui/core\";\nimport ReactTimeAgo from \"react-time-ago\";\n\nexport default function HistoryDrawer({open, setOpen}) {\n\n    const {gameState} = useContext(GameStateContext);\n    const classes = useStyles();\n\n    return (\n        <Drawer open={open} anchor=\"left\" onClose={() => setOpen(false)} classes={{paper: classes.drawer}}>\n            <Paper className={classes.container}>\n                {gameState && gameState.history.map((historyEntry) => {\n                    return (\n                        <Paper className={classes.paper} key={historyEntry.time}>\n                            <ReactTimeAgo tooltip date={new Date(historyEntry.time)} locale=\"en-US\"/>\n                            {` | ${historyEntry.message}`}\n                        </Paper>\n                    )\n                }).reverse()}\n            </Paper>\n        </Drawer>\n    )\n}\n\nconst useStyles = makeStyles({\n    container: {\n        backgroundColor: 'transparent',\n        height: '100%'\n    },\n    paper: {\n        padding: 5,\n        margin: 5\n    },\n    drawer: {\n        backgroundColor: 'slategray'\n    }\n});","import {createContext} from \"react\";\nimport useLiveData from \"../../hooks/useLiveData\";\n\nexport const LiveDataContext = createContext({});\n\nexport default function LiveDataProvider({children}) {\n\n    const {sendAction} = useLiveData();\n\n    return (\n        <LiveDataContext.Provider value={{sendAction}}>\n            {children}\n        </LiveDataContext.Provider>\n    )\n}","import {useContext} from \"react\";\nimport {GameStateContext} from \"../components/prodivers/GameStateProvider\";\n\nexport default function useLiveData() {\n    const { socket, setIsLoading } = useContext(GameStateContext)\n\n    function sendAction(id, type, targetSpace, upgrades) {\n        socket.emit('action', {actor: id, action: type, targetSpace, upgrades})\n        setIsLoading(true);\n    }\n\n    return {socket, sendAction};\n}","import {makeStyles, Typography} from \"@material-ui/core\";\nimport HowToVoteIcon from '@material-ui/icons/HowToVote';\n\nexport default function PlayerStats({name, health, supply, votes, vertical = false}) {\n\n    const classes = useStyles({ vertical });\n\n    return (\n        <div className={classes.playerInfo}>\n            <Typography align={'center'}>\n                {name}\n            </Typography>\n            <div className={classes.statContainer}>\n                <div className={classes.stat}>\n                    <img src={\"https://static.thenounproject.com/png/2111027-200.png\"}\n                         className={classes.img} alt=\"supply\"/>\n                    <Typography>\n                        {supply}\n                    </Typography>\n                </div>\n                <div className={classes.stat}>\n                    {health !== 0 ?\n                        <img\n                            src={\"https://upload.wikimedia.org/wikipedia/commons/thumb/f/f1/Heart_coraz%C3%B3n.svg/1200px-Heart_coraz%C3%B3n.svg.png\"}\n                            className={classes.img} alt=\"health\"/>\n                        :\n                        <img\n                            src={\"https://www.freeiconspng.com/uploads/healthcare-skull-icon-5.png\"}\n                            className={classes.img} alt=\"death\"/>\n                    }\n                    <Typography>\n                        {health}\n                    </Typography>\n                </div>\n                {votes !== undefined && (<div className={classes.stat}>\n                    <HowToVoteIcon />\n                    <Typography>\n                        {votes} / 3\n                    </Typography>\n                </div>)\n                }\n            </div>\n        </div>\n    )\n}\n\nconst useStyles = makeStyles(() => ({\n    playerInfo: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignSelf: 'center'\n    },\n    statContainer: {\n        display: 'flex',\n        flexDirection: ({ vertical }) => vertical ? 'column' : 'row',\n        placeContent: 'space-around',\n        flexWrap: 'wrap'\n    },\n    stat: {\n        display: 'flex',\n        flexDirection: 'row',\n        placeContent: 'space-between'\n    },\n    img: {maxHeight: 20, maxWidth: 20, alignSelf: 'center', placeContent: 'center'},\n}))","import {\n    Button, CircularProgress,\n    FormControl,\n    FormControlLabel,\n    FormLabel, makeStyles,\n    Radio,\n    RadioGroup,\n    Typography\n} from \"@material-ui/core\";\nimport {useContext, useEffect, useMemo, useState} from \"react\";\nimport {GameStateContext} from \"../prodivers/GameStateProvider\";\nimport {useParams} from \"react-router-dom\";\nimport {LiveDataContext} from \"../prodivers/LiveDataProvider\";\nimport {green} from \"@material-ui/core/colors\";\nimport PlayerStats from \"../PlayerStats\";\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\n\nexport default function AliveActions({position}) {\n\n    const [action, setAction] = useState('move');\n\n    const classes = useStyles();\n\n    const {gameState, isLoading} = useContext(GameStateContext)\n    const {id} = useParams();\n    const {sendAction} = useContext(LiveDataContext)\n\n    const [y, x] = position;\n\n    let playerAtPosition = null;\n    if (gameState?.userData.filter((playerData) => playerData.position && playerData.position === [y, x])) {\n        playerAtPosition = gameState.userData.filter((playerData) => playerData.position && playerData.position[0] === y && playerData.position[1] === x)[0]\n    }\n\n    useEffect(() => {\n        if (action === 'move' && playerAtPosition) {\n            setAction('fireRound')\n        } else if (action !== 'move' && !playerAtPosition) {\n            setAction('move');\n        }\n    }, [action, gameState, playerAtPosition])\n\n    const actionCost = useMemo(() => {\n        if (gameState) {\n            const shotDistanceX = Math.abs(gameState.player.position[1] - position[1])\n            const shotDistanceY = Math.abs(gameState.player.position[0] - position[0])\n            return Math.max(Math.max(shotDistanceY, shotDistanceX) - 2, 0);\n        } else {\n            return 0;\n        }\n    }, [gameState, position])\n\n    const onSubmit = () => {\n        sendAction(id, action, position, actionCost)\n    }\n\n    const disabled = !(gameState?.player?.supply > 0);\n\n    const submitDisabled = actionCost > gameState?.player.supply - 1 || disabled\n\n    const targetingSelf = gameState.player.position[0] === y && gameState.player.position[1] === x;\n\n    const availableUpgrades = gameState ? Math.max(gameState.player.supply - 1, 0) : 0\n    return (\n        <div>\n            <Typography>\n                ({position[1]},{position[0]})\n            </Typography>\n            <FormControl component=\"fieldset\">\n                <FormLabel component=\"legend\">Actions (base cost 1)</FormLabel>\n                <RadioGroup row onChange={(event) => setAction(event.target.value)} value={action}>\n                    <FormControlLabel value=\"move\" control={<Radio color={\"primary\"}/>} label=\"Move\"\n                                      disabled={disabled || playerAtPosition} labelPlacement=\"top\"/>\n                    <FormControlLabel value=\"fireRound\" control={<Radio color={\"primary\"}/>} label=\"Fire Round\"\n                                      disabled={disabled || !playerAtPosition} labelPlacement=\"top\"/>\n                    <FormControlLabel value=\"fireSupply\" control={<Radio color={\"primary\"}/>} label=\"Fire Supply\"\n                                      disabled={disabled || !playerAtPosition} labelPlacement=\"top\"/>\n                </RadioGroup>\n            </FormControl>\n            <div className={classes.bottomContainer}>\n                <div>\n                    <FormLabel component=\"legend\">Upgrades</FormLabel>\n                    <Typography>\n                        Required: {actionCost}\n                    </Typography>\n                    <Typography>\n                        Available: {availableUpgrades}\n                    </Typography>\n                    <div className={classes.submitContainer}>\n                        <div className={classes.loadingButtonContainer}>\n                            <Button type=\"submit\" variant=\"contained\" color=\"primary\"\n                                    disabled={submitDisabled || isLoading || targetingSelf}\n                                    onClick={onSubmit}>\n                                Submit\n                            </Button>\n                            {isLoading && <CircularProgress size={24} className={classes.buttonProgress}/>}\n                        </div>\n                        {submitDisabled && !targetingSelf && <Typography className={classes.submitErrorMessage}>\n                            Insufficient Supply!\n                        </Typography>}\n                        {targetingSelf && <Typography className={classes.submitErrorMessage}>\n                            Can't target Self!\n                        </Typography>}\n                    </div>\n                </div>\n                {playerAtPosition &&\n                <div className={classes.comparisonContainer}>\n                    <PlayerStats name={playerAtPosition.name} health={playerAtPosition.health}\n                                 supply={playerAtPosition.supply}/>\n                    <ArrowForwardIcon className={classes.icon}/>\n                    <PlayerStats name={playerAtPosition.name}\n                                 health={action === 'fireRound' ? playerAtPosition.health - 1 : playerAtPosition.health}\n                                 supply={action === 'fireSupply' ? playerAtPosition.supply + 1 : playerAtPosition.supply}/>\n                </div>\n                }\n            </div>\n        </div>\n    )\n}\n\nconst useStyles = makeStyles(() => ({\n    submitContainer: {\n        display: 'flex',\n        flexDirection: 'row',\n    },\n    submitErrorMessage: {\n        alignSelf: 'center',\n        color: 'red',\n        margin: '2px'\n    },\n    loadingButtonContainer: {\n        position: 'relative',\n    },\n    buttonProgress: {\n        color: green[500],\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        marginTop: -12,\n        marginLeft: -12,\n    },\n    bottomContainer: {\n        display: 'flex',\n        placeContent: 'space-between'\n    },\n    img: {\n        maxHeight: 20,\n        maxWidth: 20,\n        alignSelf: 'center',\n        placeContent: 'center'\n    },\n    comparisonContainer: {\n        display: 'flex',\n        flexDirection: 'row',\n    },\n    icon: {\n        margin: \"auto\"\n    }\n}))","import {Button, CircularProgress, makeStyles, Typography} from \"@material-ui/core\";\nimport {useContext} from \"react\";\nimport {GameStateContext} from \"../prodivers/GameStateProvider\";\nimport {LiveDataContext} from \"../prodivers/LiveDataProvider\";\nimport {useParams} from \"react-router-dom\";\nimport {green} from \"@material-ui/core/colors\";\nimport PlayerStats from \"../PlayerStats\";\nimport ArrowForwardIcon from \"@material-ui/icons/ArrowForward\";\n\nexport default function DeadActions({position}) {\n\n    const {gameState, isLoading} = useContext(GameStateContext)\n    const {sendAction} = useContext(LiveDataContext)\n    const {id} = useParams();\n    const classes = useStyles();\n    const [y, x] = position;\n\n    let playerAtPosition = null;\n    if (gameState?.userData.filter((playerData) => playerData.position && playerData.position === [y, x])) {\n        playerAtPosition = gameState.userData.filter((playerData) => playerData.position && playerData.position[0] === y && playerData.position[1] === x)[0]\n    }\n\n    function handleSubmit() {\n        sendAction(id, 'vote', position, 0)\n    }\n\n    return (\n        <>\n            {\n                playerAtPosition ?\n                    <div style={{display: 'flex', flexDirection: 'column'}}>\n                        <Typography align={\"center\"}>\n                            {`You have ${gameState.player.votes} vote${gameState.player.votes === 1 ? '' : 's'}`}\n                        </Typography>\n                        <div className={classes.comparisonContainer}>\n                            <PlayerStats name={playerAtPosition.name} health={playerAtPosition.health}\n                                         supply={playerAtPosition.supply} votes={playerAtPosition.votesForToday}\n                                         vertical/>\n                            <ArrowForwardIcon className={classes.icon}/>\n                            <PlayerStats name={playerAtPosition.name} vertical\n                                         health={playerAtPosition.health}\n                                         votes={playerAtPosition.votesForToday === 2 ? 0 : playerAtPosition.votesForToday + 1}\n                                         supply={playerAtPosition.votesForToday === 2 ? playerAtPosition.supply + 1 : playerAtPosition.supply}/>\n                        </div>\n                        <div className={classes.loadingButtonContainer}>\n                            <Button onClick={handleSubmit} color=\"primary\" variant=\"contained\" disabled={gameState.player.votes < 1 || isLoading}>\n                                Vote For {playerAtPosition.name}\n                            </Button>\n                            {isLoading && <CircularProgress size={24} className={classes.buttonProgress}/>}\n                        </div>\n                    </div>\n                    : `Select a Player's Position to Vote for Them`\n            }\n        </>\n    )\n}\n\nconst useStyles = makeStyles({\n    buttonProgress: {\n        color: green[500],\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        marginTop: -12,\n        marginLeft: -12,\n    },\n    loadingButtonContainer: {\n        position: 'relative',\n        alignSelf: 'center'\n    },\n    comparisonContainer: {\n        display: 'flex',\n        flexDirection: 'row',\n    },\n    icon: {\n        margin: \"auto\"\n    },\n})","import {useContext, useState} from \"react\";\nimport {\n    ClickAwayListener,\n    Fade, makeStyles,\n    Paper,\n    Popper,\n} from \"@material-ui/core\";\nimport {GameStateContext} from \"../prodivers/GameStateProvider\";\nimport AliveActions from \"./AliveActions\";\nimport DeadActions from \"./DeadActions\";\n\nexport default function wrapWithActionPrompt(position, component) {\n    return (\n        <ActionPrompt position={position}>\n            {component}\n        </ActionPrompt>\n    )\n}\n\nexport function ActionPrompt({position, children}) {\n    const [open, setOpen] = useState(false);\n    const [anchorEl, setAnchorEl] = useState(null);\n    const {gameState} = useContext(GameStateContext)\n    const classes = useStyles();\n\n    const onClickAway = () => {\n        setOpen(false);\n    }\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n        setOpen(!open)\n    };\n\n\n    return (\n        <div className={classes.container} key={`${position[1]}_${[position[0]]}`}>\n            {open && <img src={\"https://freepngimg.com/thumb/target/6-2-target-picture.png\"} className={classes.target} alt=\"target\"/>}\n            <div onClick={handleClick} className={classes.anchor}>\n                {children}\n            </div>\n            {open && <ClickAwayListener onClickAway={onClickAway}>\n                <Popper open={open} transition anchorEl={anchorEl}>\n                    {({TransitionProps}) => (\n                        <Fade {...TransitionProps}>\n                            <Paper className={classes.paper}>\n                                {gameState?.player.alive ?\n                                    <AliveActions position={position}/> :\n                                    <DeadActions position={position}/>\n                                }\n                            </Paper>\n                        </Fade>\n                    )}\n                </Popper>\n            </ClickAwayListener>}\n        </div>\n    )\n}\n\nconst useStyles = makeStyles({\n    anchor: {\n        height: '100%',\n        width: '100%',\n    },\n    container: {\n        position: \"relative\",\n        height: '100%',\n        width: '100%'\n    },\n    target: {\n        maxWidth: 50,\n        position: 'absolute',\n        top: '50%',\n        transform: 'translate(-50%, -50%)'\n    },\n    paper: {\n        padding: '10px',\n    }\n})","import {Hidden, makeStyles, Typography} from \"@material-ui/core\";\n\nexport default function TankSpace({health, supply, name, id}) {\n\n    const classes = useStyles();\n\n    return (\n        <div style={{display: 'flex', flexDirection: 'column', padding: 2, backgroundColor: \"rgb(211,211,211,0.8)\"}}\n             key={id}>\n            <div className={classes.topContainer}>\n                <img src={\"https://creazilla-store.fra1.digitaloceanspaces.com/cliparts/28562/tank-1-clipart-md.png\"}\n                     className={classes.img} alt=\"Tank\"/>\n                <Hidden smDown>\n                    <Typography className={classes.name}>\n                        {name}\n                    </Typography>\n                </Hidden>\n            </div>\n            <div style={{display: 'flex', flexWrap: 'nowrap', alignSelf: 'center'}}>\n                <div className={classes.statContainer}>\n                    <Hidden mdDown>\n                        <img src={\"https://static.thenounproject.com/png/2111027-200.png\"}\n                             className={classes.img} alt=\"supply\"/>\n                        <Typography>\n                            {supply}\n                        </Typography>\n                    </Hidden>\n                </div>\n                <div className={classes.statContainer}>\n                    <Hidden mdDown>\n                        <img\n                            src={\"https://upload.wikimedia.org/wikipedia/commons/thumb/f/f1/Heart_coraz%C3%B3n.svg/1200px-Heart_coraz%C3%B3n.svg.png\"}\n                            className={classes.img} alt=\"health\"/>\n                        <Typography>\n                            {health}\n                        </Typography>\n                    </Hidden>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst useStyles = makeStyles(() => ({\n    statContainer: {\n        display: 'flex',\n        flexWrap: \"wrap\"\n    },\n    topContainer: {\n        display: 'inline-flex',\n        alignSelf: 'center',\n        flexWrap: \"wrap\"\n    },\n    name: {\n        flex: 1\n    },\n    img: {maxHeight: 20, maxWidth: 20, alignSelf: 'center', placeContent: 'center'}\n}))","import {\n    useHistory,\n    useLocation\n} from \"react-router-dom\";\n\nexport default function useQuery() {\n    const history = useHistory();\n    const params = new URLSearchParams(useLocation().search);\n\n    function updateParams() {\n        history.replace({\n            search: params.toString(),\n        })\n    }\n\n    return { params, updateParams}\n}","import {useContext, useState} from \"react\";\nimport {GameStateContext} from \"./prodivers/GameStateProvider\";\nimport {ClickAwayListener, Fade, makeStyles, Paper, Popper, Typography} from \"@material-ui/core\";\nimport PlayerStats from \"./PlayerStats\";\n\nexport default function wrapWithPlayerData(position, component) {\n    return (\n        <PlayerData position={position}>\n            {component}\n        </PlayerData>\n    )\n}\n\nexport function PlayerData({position, children}) {\n    const [open, setOpen] = useState(false);\n    const [anchorEl, setAnchorEl] = useState(null);\n    const {gameState} = useContext(GameStateContext)\n    const classes = useStyles();\n\n    const onClickAway = () => {\n        setOpen(false);\n    }\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n        setOpen(!open)\n    };\n\n    const [y, x] = position;\n\n    let playerAtPosition = null;\n    if (gameState?.userData.filter((playerData) => playerData.position && playerData.position === [y, x])) {\n        playerAtPosition = gameState.userData.filter((playerData) => playerData.position && playerData.position[0] === y && playerData.position[1] === x)[0]\n    }\n\n\n    return (\n        <div className={classes.container} key={`${position[1]}_${[position[0]]}`}>\n            {open && <img src={\"https://freepngimg.com/thumb/target/6-2-target-picture.png\"} className={classes.target}\n                          alt=\"target\"/>}\n            <div onClick={handleClick} className={classes.anchor}>\n                {children}\n            </div>\n            {open && <ClickAwayListener onClickAway={onClickAway}>\n                <Popper open={open} transition anchorEl={anchorEl}>\n                    {({TransitionProps}) => (\n                        <Fade {...TransitionProps}>\n                            <Paper className={classes.paper}>\n                                {playerAtPosition ?\n                                    <PlayerStats name={playerAtPosition.name} health={playerAtPosition.health}\n                                                 supply={playerAtPosition.supply}\n                                                 votes={playerAtPosition.votesForToday}/> :\n                                    <Typography> Click on a player to see their stats</Typography>}\n                            </Paper>\n                        </Fade>\n                    )}\n                </Popper>\n            </ClickAwayListener>}\n        </div>\n    )\n}\n\nconst useStyles = makeStyles({\n    anchor: {\n        height: '100%',\n        width: '100%',\n    },\n    container: {\n        position: \"relative\",\n        height: '100%',\n        width: '100%'\n    },\n    target: {\n        maxWidth: 50,\n        position: 'absolute',\n        top: '50%',\n        transform: 'translate(-50%, -50%)'\n    },\n    paper: {\n        padding: '10px',\n    }\n})","import {makeStyles, Paper} from \"@material-ui/core\";\nimport {useContext, useMemo} from \"react\";\nimport {GameStateContext} from \"../prodivers/GameStateProvider\";\nimport getDistanceBetweenPositions from \"../../utilities/getDistanceBetweenPositions\";\nimport wrapWithActionPrompt from \"../actions/ActionPrompt\";\nimport TankSpace from \"../TankSpace\";\nimport useQuery from \"../../hooks/useQuery\";\nimport wrapWithPlayerData from \"../PlayerData\";\n\nexport default function GameBoard() {\n\n    const {gameState} = useContext(GameStateContext);\n    const {params} = useQuery();\n\n    const classes = useStyles({gameState});\n\n    const gridLayout = useMemo(() => {\n            const isDarkMode = params.has('darkMode');\n            const gridColor = isDarkMode ? '#000000' : \"#D3D3D3\"\n            const stripeFactory = (stripeColor) => `repeating-linear-gradient(-45deg,  ${stripeColor},  ${stripeColor} 10px,  ${gridColor} 10px, ${gridColor} 20px)`\n            const backgroundColors = [stripeFactory(\"#5C8248FF\"), stripeFactory(\"#FFB862\"), stripeFactory(\"#FF6262\")]\n            const components = []\n\n            const generateInternalComponents = (y) => {\n                const internalComponents = []\n                for (let x = -1; x < gameState.bounds[1]; x++) {\n                    let playerAtPosition = null;\n                    if (gameState?.userData.filter((playerData) => playerData.position && playerData.position === [y, x])) {\n                        playerAtPosition = gameState.userData.filter((playerData) => playerData.position && playerData.position[0] === y && playerData.position[1] === x)[0]\n                    }\n\n                    let background = gridColor;\n                    let border = ''\n                    if (!gameState?.spectator) {\n                        // Range indicator and player border\n                        const distanceFromPlayer = getDistanceBetweenPositions(gameState?.player.position, [y, x])\n                        if (params.has('rangeIndicator') && distanceFromPlayer < 3) {\n                            background = backgroundColors[distanceFromPlayer]\n                        } else if (distanceFromPlayer === 0) {\n                            if (isDarkMode) {\n                                border = 'thick solid blue'\n                            } else {\n                                border = \"thin solid blue\"\n                            }\n                        } else if (isDarkMode) {\n                            border = \"thin dotted lightgray\"\n                        }\n                    }\n\n                    const wrapper = gameState?.spectator ? wrapWithPlayerData : wrapWithActionPrompt\n                    let itemToPush = (\n                        <Paper style={{\n                            textAlign: 'center',\n                            flex: 1,\n                            background: background,\n                            cursor: 'pointer',\n                            boxSizing: 'border-box',\n                            height: '100%',\n                            width: '100%',\n                            border: border\n                        }} key={`${x}_${y}`}>\n                            {wrapper([y, x], playerAtPosition ?\n                                <TankSpace health={playerAtPosition.health} supply={playerAtPosition.supply}\n                                           name={playerAtPosition.name} id={`${x}${y}`}/> :\n                                <div className={classes.blankSpace} id={`${x}${y}`} key={`${x}${y}`}/>)}\n                        </Paper>)\n                    if (x === -1 || y === -1) {\n                        if (x === -1 && y === -1) {\n                            itemToPush = (<div style={{width: '20px'}} key={`${x} ${y}`}/>)\n                        } else {\n                            const indexNum = x === -1 ? y : x;\n                            const maxWidth = y === -1 ? '100%' : '20px'\n                            itemToPush = (\n                                <div style={{\n                                    flex: 1,\n                                    alignSelf: 'center',\n                                    maxWidth: maxWidth,\n                                    color: 'white'\n                                }} id={`${x}${y}`} key={`${x} ${y}`}> {indexNum} </div>)\n                        }\n                    }\n                    components.push(itemToPush)\n                }\n                return internalComponents;\n            }\n\n            if (gameState) {\n                for (let i = -1; i < gameState.bounds[0]; i++) {\n                    generateInternalComponents(i)\n                }\n            }\n            return components;\n        },\n        [classes.blankSpace, gameState, params]\n    );\n\n    return (\n        <div className={classes.containerGrid}>\n            {gridLayout}\n        </div>\n    )\n}\n\nconst useStyles = makeStyles({\n    containerGrid: {\n        backgroundColor: 'slategray',\n        height: '100%',\n        display: 'grid',\n        gridTemplateColumns: ({gameState}) => `20px repeat(${gameState ? gameState.bounds[1] : 'auto-fill'}, 1fr)`,\n        gridTemplateRows: ({gameState}) => `20px repeat(${gameState ? gameState.bounds[0] : 'auto-fill'}, 1fr)`\n    },\n    paper: {\n        height: '100%',\n        width: '100%',\n    },\n    blankSpace: {\n        height: '100%',\n        width: '100%',\n        minWidth: '30px'\n    }\n})","export default function getDistanceBetweenPositions(pos1, pos2) {\n    if (!pos1) {\n        return 1000\n    }\n    const distanceBetweenX = Math.abs(pos1[1] - pos2[1])\n    const distanceBetweenY = Math.abs(pos1[0] - pos2[0])\n\n    return Math.max(distanceBetweenX, distanceBetweenY);\n}","import {useContext, useMemo} from \"react\";\nimport {GameStateContext} from \"../prodivers/GameStateProvider\";\nimport {Chip, Divider, Drawer, makeStyles, Paper, Typography} from \"@material-ui/core\";\nimport HowToVoteIcon from '@material-ui/icons/HowToVote';\nimport TaskIcon from '@material-ui/icons/Note';\n\nexport default function JuryDrawer({open, setOpen}) {\n\n    const {gameState} = useContext(GameStateContext);\n    const classes = useStyles();\n\n    const deadPlayers = useMemo(() => {\n        if (gameState) {\n            return gameState.userData.filter((user) => !user.alive)\n        }\n        return [];\n    }, [gameState]);\n\n    const alivePlayers = useMemo(() => {\n        if (gameState) {\n            return gameState.userData.filter((user) => user.alive)\n        }\n        return [];\n    }, [gameState]);\n\n    return (\n        <Drawer open={open} anchor=\"left\" onClose={() => setOpen(false)}  classes={{paper: classes.drawer}}>\n            <Paper className={classes.container}>\n                <div>\n                    <Typography className={classes.type}>\n                        The Esteemed Jury\n                    </Typography>\n                    <Divider/>\n                    {deadPlayers.map((player) => (\n                        <Paper className={classes.paper} key={player.name}>\n                            <Typography className={classes.playerName}>\n                                {player.name}\n                            </Typography>\n                            <Chip\n                                icon={<TaskIcon/>}\n                                variant=\"outlined\"\n                                label={player.votes}\n                            />\n                        </Paper>\n                    ))}\n                </div>\n                <div>\n                    <Typography className={classes.type}>\n                        Votes For the Living\n                    </Typography>\n                    <Divider/>\n                    {alivePlayers.map((player) => (\n                        <Paper className={classes.paper} key={player.name}>\n                            <Typography className={classes.playerName}>\n                                {player.name}\n                            </Typography>\n                            <Chip\n                                icon={<HowToVoteIcon/>}\n                                variant=\"outlined\"\n                                label={`${player.votesForToday} / 3 `}\n                            />\n                        </Paper>\n                    ))}\n                </div>\n            </Paper>\n        </Drawer>\n    )\n}\n\nconst useStyles = makeStyles({\n    container: {\n        backgroundColor: 'transparent',\n        padding: '10px',\n        height: '100%'\n    },\n    drawer: {\n        backgroundColor: 'slategray'\n    },\n    paper: {\n        padding: 5,\n        margin: 5,\n        display: 'flex',\n        placeContent: 'space-evenly'\n    },\n    type: {\n        color: 'white',\n        placeContent: 'center',\n    },\n    chip: {\n        justifyContent: 'center'\n    },\n    playerName: {\n        alignSelf: 'center',\n        marginRight: '10px'\n    }\n});","import {makeStyles, Switch, Typography} from \"@material-ui/core\";\nimport useQuery from \"../../hooks/useQuery\";\n\nexport default function RangeToggle() {\n\n    const { params, updateParams } = useQuery();\n    const classes = useStyles();\n\n    function handleSwitch(event) {\n        if (event.target.checked) {\n            params.set('rangeIndicator', \"1\");\n            updateParams();\n        } else {\n            params.delete('rangeIndicator')\n            updateParams();\n        }\n    }\n\n    return (\n        <div className={classes.container}>\n            <Typography className={classes.text}>\n                Range Indicator\n            </Typography>\n            <Switch\n                checked={params.get('rangeIndicator')}\n                onChange={handleSwitch}\n                name=\"checkedA\"\n                inputProps={{ 'aria-label': 'secondary checkbox' }}\n                color=\"primary\"\n            />\n        </div>\n    )\n}\n\nconst useStyles = makeStyles({\n    container: {\n        margin: 10,\n        display: 'inline-flex',\n        marginTop: 'auto',\n    },\n    text: {\n        alignSelf: 'center',\n        color: 'white',\n        marginRight: 'auto'\n    }\n});","import {makeStyles, Switch, Typography} from \"@material-ui/core\";\nimport useQuery from \"../../hooks/useQuery\";\n\nexport default function DarkModeToggle() {\n\n    const { params, updateParams } = useQuery();\n    const classes = useStyles();\n\n    function handleSwitch(event) {\n        if (event.target.checked) {\n            params.set('darkMode', \"1\");\n            updateParams();\n        } else {\n            params.delete('darkMode')\n            updateParams();\n        }\n    }\n\n    return (\n        <div className={classes.container}>\n            <Typography className={classes.text}>\n                Dark Mode\n            </Typography>\n            <Switch\n                checked={params.get('darkMode')}\n                onChange={handleSwitch}\n                inputProps={{ 'aria-label': 'secondary checkbox' }}\n                color=\"primary\"\n            />\n        </div>\n    )\n}\n\nconst useStyles = makeStyles({\n    container: {\n        margin: 10,\n        display: 'inline-flex',\n    },\n    text: {\n        alignSelf: 'center',\n        color: 'white',\n        marginRight: 'auto'\n    }\n});","import {Drawer, List, ListItem, ListItemIcon, ListItemText, makeStyles, Paper } from \"@material-ui/core\";\nimport HistoryIcon from \"@material-ui/icons/History\";\nimport GavelIcon from \"@material-ui/icons/Gavel\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\"\nimport RangeToggle from \"../toggles/RangeToggle\";\nimport DarkModeToggle from \"../toggles/DarkModeToggle\";\n\nexport default function MenuDrawer({open, setIsOpen, setIsJuryOpen, setIsStatsOpen, setIsHistoryOpen}) {\n\n    const classes = useStyles();\n\n    return (\n        <Drawer open={open} anchor=\"left\" onClose={() => setIsOpen(false)} classes={{paper: classes.drawer}}>\n            <Paper className={classes.container}>\n                <List>\n                    <ListItem button key={'history'} className={classes.icon} onClick={() => {\n                        setIsHistoryOpen(true);\n                        setIsOpen(false);\n                    }}>\n                        <ListItemIcon className={classes.icon}>\n                            <HistoryIcon/>\n                        </ListItemIcon>\n                        <ListItemText primary={\"History\"} />\n                    </ListItem>\n                    <ListItem button key={'jury'} className={classes.icon} onClick={() => {\n                        setIsOpen(false);\n                        setIsJuryOpen(true);\n                    }}>\n                        <ListItemIcon className={classes.icon}>\n                            <GavelIcon/>\n                        </ListItemIcon>\n                        <ListItemText primary={\"Jury\"}/>\n                    </ListItem>\n                    <ListItem button key={'stats'} className={classes.icon} onClick={() => {\n                        setIsOpen(false);\n                        setIsStatsOpen(true);\n                    }}>\n                        <ListItemIcon className={classes.icon}>\n                            <FavoriteIcon/>\n                        </ListItemIcon>\n                        <ListItemText primary={\"Stats\"}/>\n                    </ListItem>\n                </List>\n                <RangeToggle />\n                <DarkModeToggle />\n            </Paper>\n        </Drawer>\n    )\n}\n\nconst useStyles = makeStyles({\n    container: {\n        backgroundColor: 'transparent',\n        height: '100%',\n        display: 'contents'\n    },\n    paper: {\n        padding: 5,\n        margin: 5\n    },\n    drawer: {\n        backgroundColor: 'slategray',\n        width: '200px'\n    },\n    icon: {\n        color: 'white'\n    }\n});","import {useContext} from \"react\";\nimport {GameStateContext} from \"../prodivers/GameStateProvider\";\nimport {Drawer, makeStyles, Paper, Typography} from \"@material-ui/core\";\n\nexport default function StatDrawer({isOpen, setIsOpen}) {\n\n    const {gameState} = useContext(GameStateContext);\n    const classes = useStyles();\n\n    return (\n        <Drawer open={isOpen} anchor=\"left\" onClose={() => setIsOpen(false)} classes={{paper: classes.drawer}}>\n            <Paper className={classes.container}>\n                <Typography>\n                    Commanders\n                </Typography>\n                <div className={classes.gridContainer}>\n                    {gameState && gameState.userData.filter((user) => user.alive).map(userData => (\n                        <Paper className={classes.paper} key={userData.name}>\n                            <div>\n                                <Typography align={\"center\"}>\n                                    {userData.name}\n                                </Typography>\n                                <div className={classes.statContainer}>\n                                    <div className={classes.statContainer}>\n                                        <img src={\"https://static.thenounproject.com/png/2111027-200.png\"}\n                                             className={classes.img} alt=\"supply\"/>\n                                        <Typography>\n                                            {userData.supply}\n                                        </Typography>\n                                    </div>\n                                    <div className={classes.statContainer}>\n                                        <img\n                                            src={\"https://upload.wikimedia.org/wikipedia/commons/thumb/f/f1/Heart_coraz%C3%B3n.svg/1200px-Heart_coraz%C3%B3n.svg.png\"}\n                                            className={classes.img} alt=\"health\"/>\n                                        <Typography>\n                                            {userData.health}\n                                        </Typography>\n                                    </div>\n                                    <div className={classes.statContainer}>\n                                        <img\n                                            src={\"https://www.freeiconspng.com/uploads/healthcare-skull-icon-5.png\"}\n                                            className={classes.img} alt=\"kills\"/>\n                                        <Typography>\n                                            {userData.kills}\n                                        </Typography>\n                                    </div>\n                                </div>\n                            </div>\n                        </Paper>\n                    ))}\n                </div>\n                <Typography >\n                    Jury\n                </Typography>\n                <div className={classes.gridContainer}>\n                    {gameState && gameState.userData.filter((user) => !user.alive).map(userData => (\n                        <Paper className={classes.paper} key={userData.name}>\n                            <div>\n                                <Typography align={\"center\"}>\n                                    {userData.name}\n                                </Typography>\n                                <div className={classes.statContainer}>\n                                    <div className={classes.statContainer}>\n                                        <img src={\"https://static.thenounproject.com/png/981735-200.png\"}\n                                             className={classes.img} alt=\"votes\"/>\n                                        <Typography>\n                                            {userData.votes}\n                                        </Typography>\n                                    </div>\n                                    <div className={classes.statContainer}>\n                                        <img\n                                            src={\"https://www.freeiconspng.com/uploads/healthcare-skull-icon-5.png\"}\n                                            className={classes.img} alt=\"kills\"/>\n                                        <Typography>\n                                            {userData.kills}\n                                        </Typography>\n                                    </div>\n                                </div>\n                            </div>\n                        </Paper>\n                    ))}\n                </div>\n            </Paper>\n        </Drawer>\n    )\n}\n\nconst useStyles = makeStyles({\n    text: {\n      color: 'white'\n    },\n    container: {\n        backgroundColor: 'transparent',\n        height: '100%'\n    },\n    paper: {\n        padding: 5,\n        margin: 5\n    },\n    drawer: {\n        backgroundColor: 'slategray',\n    },\n    gridContainer: {\n        display: 'grid',\n        gridTemplateColumns: 'repeat(3, 1fr)'\n    },\n    statContainer: {\n        display: 'flex',\n        flexDirection: 'row',\n        placeContent: 'space-around'\n    },\n    img: {maxHeight: 20, maxWidth: 20, alignSelf: 'center', placeContent: 'center'}\n});","import {Typography} from \"@material-ui/core\";\nimport Countdown from \"react-countdown\";\nimport {useContext, useMemo} from \"react\";\nimport {GameStateContext} from \"../prodivers/GameStateProvider\";\n\nexport default function Ceasefire() {\n    const { gameState } = useContext(GameStateContext);\n    const text = useMemo(() => {\n        if (gameState.ceasefire.active) {\n            return 'Ceasefire Ends In:'\n        } else {\n            return 'Ceasefire Starts In:'\n        }\n    }, [gameState])\n\n    const nextEventTime = gameState?.ceasefire.active ? gameState.ceasefire.end : gameState.ceasefire.start;\n\n    return (\n        <>\n            <Typography style={{padding: 5, marginLeft: 'auto'}}>\n                {text}\n            </Typography>\n            <div style={{padding: 5}}>\n                <Countdown date={Date.parse(nextEventTime)}/>\n            </div>\n        </>\n    )\n}","import {Typography} from \"@material-ui/core\";\nimport Countdown from \"react-countdown\";\nimport {useContext} from \"react\";\nimport {GameStateContext} from \"../prodivers/GameStateProvider\";\n\nexport default function Resupply() {\n    const { gameState } = useContext(GameStateContext);\n\n    return (\n        <>\n            <Typography style={{padding: 5, marginLeft: 'auto'}}>\n                Resupply In:\n            </Typography>\n            <div style={{padding: 5}}>\n                <Countdown date={Date.parse(gameState.nextResupplyTime)}/>\n            </div>\n        </>\n    )\n}","import {AppBar, IconButton, Typography} from \"@material-ui/core\";\nimport {useContext, useState} from \"react\";\nimport {GameStateContext} from \"./prodivers/GameStateProvider\";\nimport MenuIcon from '@material-ui/icons/Menu';\nimport HistoryDrawer from \"./drawers/HistoryDrawer\";\nimport GameBoard from \"./gameboard/GameBoard\";\nimport JuryDrawer from \"./drawers/JuryDrawer\";\nimport MenuDrawer from \"./drawers/MenuDrawer\";\nimport StatDrawer from \"./drawers/StatDrawer\";\nimport Ceasefire from \"./timers/Ceasefire\";\nimport Resupply from \"./timers/Resupply\";\nimport PlayerStats from \"./PlayerStats\";\n\nexport default function AppBody() {\n    const {gameState, isLoading} = useContext(GameStateContext);\n    const [historyDrawerOpen, setHistoryDrawerOpen] = useState(false);\n    const [juryDrawerOpen, setJuryDrawerOpen] = useState(false);\n    const [menuDrawerOpen, setMenuDrawerOpen] = useState(false);\n    const [statsDrawerOpen, setStatsDrawerOpen] = useState(false);\n\n    function handleMenuClick() {\n        setMenuDrawerOpen((isOpen) => !isOpen)\n    }\n\n    return (\n        <div style={{height: '100%', display: 'flex', flexDirection: 'column'}}>\n            <AppBar position=\"sticky\" style={{flex: 0}}>\n                <div style={{display: 'flex', flexDirection: 'row'}}>\n                    <IconButton style={{color: 'white'}} size={\"small\"} onClick={handleMenuClick}>\n                        <MenuIcon/>\n                    </IconButton>\n                    {(!isLoading || gameState) && (\n                        <>\n                            {gameState?.spectator ?\n                                <>\n                                    <Typography style={{padding: 5}}>\n                                        Spectator\n                                    </Typography>\n                                </>\n                                :\n                                <>\n                                    <Typography style={{padding: 5}}>\n                                        {gameState?.player.name}\n                                    </Typography>\n                                    {gameState?.player.alive ?\n                                        <PlayerStats health={gameState?.player.health}\n                                                     supply={gameState?.player.supply}\n                                                     votes={gameState?.player.votesForToday}/>\n                                        : <Typography style={{padding: 5}}>\n                                            Votes: {gameState?.player.votes}\n                                        </Typography>}\n                                    {!gameState?.player.alive ?\n                                        <Typography style={{padding: 5}}>\n                                            You are dead\n                                        </Typography> : ''\n                                    }\n                                </>\n                            }\n                        </>\n                    )}\n                    {gameState?.nextResupplyTime && <Resupply/>\n                    }\n                    {\n                        gameState?.ceasefire && <Ceasefire/>\n                    }\n                </div>\n            </AppBar>\n            <StatDrawer isOpen={statsDrawerOpen} setIsOpen={setStatsDrawerOpen}/>\n            <MenuDrawer open={menuDrawerOpen} setIsOpen={setMenuDrawerOpen} setIsHistoryOpen={setHistoryDrawerOpen}\n                        setIsJuryOpen={setJuryDrawerOpen} setIsStatsOpen={setStatsDrawerOpen}/>\n            <HistoryDrawer open={historyDrawerOpen} setOpen={setHistoryDrawerOpen}/>\n            <JuryDrawer open={juryDrawerOpen} setOpen={setJuryDrawerOpen}/>\n            <GameBoard/>\n        </div>\n    )\n}","import {TextField} from \"@material-ui/core\";\nimport {useState} from \"react\";\nimport {checkValidId} from \"../utilities/fetchGameData\";\nimport {Redirect} from \"react-router-dom\"\n\nexport default function Login() {\n    const [value, setValue] = useState('');\n    const [validID, setValidID] = useState(null);\n    const [errorMessage, setErrorMessage] = useState('');\n\n    async function onKeyDown(e) {\n        if (e.keyCode === 13) {\n            const isValidId = await checkValidId(e.target.value);\n            if (isValidId) {\n                setValidID(e.target.value);\n            } else {\n                setErrorMessage(\"Invalid Player ID\");\n            }\n        }\n    }\n\n    function handleChange(e) {\n        setValue(e.target.value);\n    }\n\n    return (\n        <div style={{backgroundColor: 'lightslategrey', height: '100vh'}}>\n            <TextField style={{position: 'absolute', top: '50%', transform: 'translate(-50%, -50%)'}}\n                       onKeyDown={onKeyDown} value={value} onChange={handleChange}\n                       error={errorMessage !== ''} helperText={errorMessage}/>\n            {validID ? <Redirect to={`${validID}`}/> : ''}\n        </div>\n    )\n}","import useIsValidID from \"../hooks/useIsValidID\";\nimport {Redirect} from \"react-router-dom\";\nimport {CircularProgress} from \"@material-ui/core\";\nimport {\nuseParams\n} from \"react-router-dom\";\n\nexport default function ValidIdWrapper({children}) {\n    const { id } = useParams()\n    const {isValidID, isLoading} = useIsValidID(id)\n\n    return (\n        <div>\n            {!isLoading && isValidID && children}\n            {isValidID === false && !isLoading && <Redirect to={\"/\"}/>}\n            {isLoading && <CircularProgress  /> }\n        </div>\n    )\n}","import {useEffect, useState} from \"react\";\nimport {checkValidId} from \"../utilities/fetchGameData\";\n\nexport default function useIsValidID(id) {\n    const [isValidID, setIsValidId] = useState();\n    const [isLoading, setIsLoading] = useState(true);\n\n    useEffect( () => {\n        if (id) {\n            checkValidId(id).then((result) => {\n                setIsValidId(result)\n            }).finally(() => setIsLoading(false));\n        }\n    }, [id, setIsValidId])\n    \n    return {isValidID, isLoading};\n}","import useQuery from \"../hooks/useQuery\";\nimport {useCallback, useEffect} from \"react\";\n\nexport default function KeyEventListener({children}) {\n\n    const {params, updateParams} = useQuery();\n\n    const handleKeyDown = useCallback((event) => {\n        function handleKeyDown(event) {\n\n            if (event.code === 'KeyD') {\n                if (params.has('darkMode')) {\n                    params.delete('darkMode')\n                } else {\n                    params.set('darkMode', \"1\")\n                }\n                updateParams();\n            } else if (event.code === 'KeyI') {\n                if (params.has('rangeIndicator')) {\n                    params.delete('rangeIndicator')\n                } else {\n                    params.set('rangeIndicator', \"1\")\n                }\n                updateParams();\n            }\n        }\n\n        handleKeyDown(event);\n    }, [params, updateParams])\n\n    useEffect(() => {\n        document.addEventListener('keydown', handleKeyDown);\n\n        return () => {\n            document.removeEventListener('keydown', handleKeyDown)\n        }\n    }, [handleKeyDown])\n\n    return children\n}","import {HashRouter as Router, Route, Switch} from \"react-router-dom\";\nimport AppBody from \"./components/AppBody\";\nimport Login from \"./components/Login\";\nimport ValidIdWrapper from \"./components/ValidIDWrapper\";\nimport LiveDataProvider from \"./components/prodivers/LiveDataProvider\";\nimport GameStateProvider from \"./components/prodivers/GameStateProvider\";\nimport {SnackbarProvider} from \"notistack\";\nimport KeyEventListener from \"./components/KeyEventListener\";\n\nexport default function AppRouter() {\n    return (\n        <Router style={{height: '100%'}}>\n            <Switch style={{height: '100%'}}>\n                <Route exact path=\"/\" style={{height: '100%'}}>\n                    <Login/>\n                </Route>\n                <Route exact path=\"/:id\">\n                    <ValidIdWrapper>\n                        <SnackbarProvider anchorOrigin={{vertical: 'top', horizontal: 'center'}}>\n                            <GameStateProvider>\n                                <LiveDataProvider>\n                                    <KeyEventListener>\n                                        <AppBody/>\n                                    </KeyEventListener>\n                                </LiveDataProvider>\n                            </GameStateProvider>\n                        </SnackbarProvider>\n                    </ValidIdWrapper>\n                </Route>\n            </Switch>\n        </Router>\n    )\n}","import './App.css';\nimport AppRouter from \"./Router\";\n\nfunction App() {\n\n  return (\n    <div className=\"App\" style={{height: '100%'}}>\n      <AppRouter />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport TimeAgo from 'javascript-time-ago';\nimport en from 'javascript-time-ago/locale/en';\nTimeAgo.addDefaultLocale(en)\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}