{"version":3,"sources":["utilities/fetchGameData.js","components/prodivers/GameStateProvider.js","components/drawers/HistoryDrawer.js","components/prodivers/LiveDataProvider.js","hooks/useLiveData.js","components/actions/AliveActions.js","components/actions/DeadActions.js","components/actions/ActionPrompt.js","components/TankSpace.js","hooks/useQuery.js","components/gameboard/GameboardV2.js","utilities/getDistanceBetweenPositions.js","components/drawers/JuryDrawer.js","components/toggles/RangeToggle.js","components/toggles/DarkModeToggle.js","components/drawers/MenuDrawer.js","components/drawers/StatDrawer.js","components/AppBody.js","components/Login.js","components/ValidIDWrapper.js","hooks/useIsValidID.js","components/AdminLogin.js","components/KeyEventListener.js","Router.js","App.js","index.js"],"names":["baseURL","idCheckExtension","gameStateExtension","checkValidId","id","a","axios","get","catch","response","status","newGameState","data","GameStateContext","createContext","player","name","supply","health","GameStateProvider","children","useParams","useState","gameState","setGameState","socket","setSocket","isLoading","setIsLoading","history","useHistory","enqueueSnackbar","useSnackbar","useEffect","getGameState","then","finally","sock","socketClient","on","emit","message","lastMessage","length","variant","action","autoHideDuration","push","Provider","value","HistoryDrawer","open","setOpen","useContext","classes","useStyles","Drawer","anchor","onClose","paper","drawer","Paper","className","container","map","historyEntry","ReactTimeAgo","tooltip","date","Date","time","locale","reverse","makeStyles","backgroundColor","height","padding","margin","LiveDataContext","LiveDataProvider","sendAction","type","targetSpace","upgrades","actor","useLiveData","AliveActions","position","setAction","y","x","playerAtPosition","userData","filter","playerData","actionCost","useMemo","shotDistanceX","Math","abs","shotDistanceY","console","log","max","disabled","submitDisabled","availableUpgrades","Typography","FormControl","component","FormLabel","RadioGroup","row","onChange","event","target","FormControlLabel","control","Radio","label","submitContainer","loadingButtonContainer","Button","onClick","CircularProgress","size","buttonProgress","submitErrorMessage","display","flexDirection","alignSelf","color","green","top","left","marginTop","marginLeft","DeadActions","style","votes","votesForToday","ActionPrompt","anchorEl","setAnchorEl","src","alt","currentTarget","ClickAwayListener","onClickAway","Popper","transition","TransitionProps","Fade","alive","width","maxWidth","transform","TankSpace","topContainer","img","Hidden","smDown","flexWrap","statContainer","mdDown","flex","maxHeight","placeContent","useQuery","params","URLSearchParams","useLocation","search","updateParams","replace","toString","GameBoardV2","gridLayout","isDarkMode","has","gridColor","stripeFactory","stripeColor","backgroundColors","components","generateInternalComponents","distanceFromPlayer","pos1","pos2","distanceBetweenX","distanceBetweenY","getDistanceBetweenPositions","background","itemToPush","textAlign","cursor","boxSizing","border","blankSpace","indexNum","bounds","i","containerGrid","gridTemplateColumns","gridTemplateRows","minWidth","JuryDrawer","deadPlayers","user","alivePlayers","Divider","playerName","Chip","icon","chip","justifyContent","marginRight","RangeToggle","text","Switch","checked","set","delete","inputProps","DarkModeToggle","MenuDrawer","setIsOpen","setIsJuryOpen","setIsStatsOpen","setIsHistoryOpen","List","ListItem","button","ListItemIcon","ListItemText","primary","StatDrawer","isOpen","gridContainer","align","AppBody","historyDrawerOpen","setHistoryDrawerOpen","juryDrawerOpen","setJuryDrawerOpen","menuDrawerOpen","setMenuDrawerOpen","statsDrawerOpen","setStatsDrawerOpen","AppBar","IconButton","nextResupplyTime","parse","Login","setValue","validID","setValidID","errorMessage","setErrorMessage","e","keyCode","TextField","onSubmit","onKeyDown","error","helperText","to","ValidIdWrapper","isValidID","setIsValidId","result","useIsValidID","AdminLogin","setID","put","generateID","registerID","KeyEventListener","handleKeyDown","useCallback","code","document","addEventListener","removeEventListener","AppRouter","basename","exact","path","anchorOrigin","vertical","horizontal","App","TimeAgo","addDefaultLocale","en","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.29144743.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst baseURL = \"https://TankTacticsService.drewcolgin.repl.co/\";\nconst idCheckExtension = \"api/check/\"\nconst gameStateExtension = \"api/gamestate/\"\n\nexport async function checkValidId(id) {\n    const response = await axios.get(`${baseURL}${idCheckExtension}${id}`).catch(() => false)\n    return response.status === 200;\n}\n\nexport async function getGameState(id) {\n    const newGameState = await axios.get(`${baseURL}${gameStateExtension}${id}`)\n    return newGameState.data;\n}","import {createContext, useEffect, useState} from \"react\";\nimport {getGameState} from \"../../utilities/fetchGameData\";\nimport {useHistory, useParams} from \"react-router-dom\";\nimport {useSnackbar} from \"notistack\";\nimport socketClient from \"socket.io-client\";\n\nexport const GameStateContext = createContext({player: {name: 'loading', supply: 0, health: 0}});\n\nconst wsURL = \"https://TankTacticsService.drewcolgin.repl.co\";\n\nexport default function GameStateProvider({ children }) {\n    const { id } = useParams();\n    const [gameState, setGameState] = useState();\n    const [socket, setSocket] = useState();\n    const [isLoading, setIsLoading] = useState(false);\n    let history = useHistory();\n    const {enqueueSnackbar} = useSnackbar();\n    \n    useEffect(() => {\n        setIsLoading(true);\n        getGameState(id).then((gameState) => setGameState(gameState)).finally(() => setIsLoading(false));\n    }, [id]);\n\n    useEffect(() => {\n        const sock = socketClient(wsURL)\n\n\n        sock.on('connect', async () => {\n            setSocket(sock);\n            sock.emit('register', id)\n        });\n\n        sock.on('gameStateUpdate', (message) => {\n            setGameState(message);\n\n            if (message && message.history) {\n                const lastMessage = message.history[message.history.length - 1]\n                enqueueSnackbar(lastMessage.message, {variant: 'info'})\n            }\n            setIsLoading(false);\n        })\n\n        sock.on('invalid', (message) => {\n            enqueueSnackbar(`Invalid ${message.action} Action`, {variant: 'error', autoHideDuration: 1000})\n            setIsLoading(false);\n        })\n\n        sock.on('unlog', () => {\n            history.push('/')\n        })\n\n    }, [enqueueSnackbar, history, id, setGameState])\n\n    return (\n        <GameStateContext.Provider value={{gameState, setGameState, socket, isLoading, setIsLoading}}>\n            {children}\n        </GameStateContext.Provider>\n    )\n}","import {useContext} from \"react\";\nimport {GameStateContext} from \"../prodivers/GameStateProvider\";\nimport {Drawer, makeStyles, Paper} from \"@material-ui/core\";\nimport ReactTimeAgo from \"react-time-ago\";\n\nexport default function HistoryDrawer({open, setOpen}) {\n\n    const {gameState} = useContext(GameStateContext);\n    const classes = useStyles();\n\n    return (\n        <Drawer open={open} anchor=\"left\" onClose={() => setOpen(false)} classes={{paper: classes.drawer}}>\n            <Paper className={classes.container}>\n                {gameState && gameState.history.map((historyEntry) => {\n                    return (\n                        <Paper className={classes.paper} key={historyEntry.time}>\n                            <ReactTimeAgo tooltip date={new Date(historyEntry.time)} locale=\"en-US\"/>\n                            {` | ${historyEntry.message}`}\n                        </Paper>\n                    )\n                }).reverse()}\n            </Paper>\n        </Drawer>\n    )\n}\n\nconst useStyles = makeStyles({\n    container: {\n        backgroundColor: 'transparent',\n        height: '100%'\n    },\n    paper: {\n        padding: 5,\n        margin: 5\n    },\n    drawer: {\n        backgroundColor: 'slategray'\n    }\n});","import {createContext} from \"react\";\nimport useLiveData from \"../../hooks/useLiveData\";\n\nexport const LiveDataContext = createContext({});\n\nexport default function LiveDataProvider({children}) {\n\n    const {sendAction} = useLiveData();\n\n    return (\n        <LiveDataContext.Provider value={{sendAction}}>\n            {children}\n        </LiveDataContext.Provider>\n    )\n}","import {useContext} from \"react\";\nimport {GameStateContext} from \"../components/prodivers/GameStateProvider\";\n\nexport default function useLiveData() {\n    const { socket, setIsLoading } = useContext(GameStateContext)\n\n    function sendAction(id, type, targetSpace, upgrades) {\n        socket.emit('action', {actor: id, action: type, targetSpace, upgrades})\n        setIsLoading(true);\n    }\n\n    return {socket, sendAction};\n}","import {\n    Button, CircularProgress,\n    FormControl,\n    FormControlLabel,\n    FormLabel, makeStyles,\n    Radio,\n    RadioGroup,\n    Typography\n} from \"@material-ui/core\";\nimport {useContext, useMemo, useState} from \"react\";\nimport {GameStateContext} from \"../prodivers/GameStateProvider\";\nimport {useParams} from \"react-router-dom\";\nimport {LiveDataContext} from \"../prodivers/LiveDataProvider\";\nimport {green} from \"@material-ui/core/colors\";\n\nexport default function AliveActions({position}) {\n\n    const [action, setAction] = useState('move');\n\n    const classes = useStyles();\n\n    const {gameState, isLoading} = useContext(GameStateContext)\n    const {id} = useParams();\n    const {sendAction} = useContext(LiveDataContext)\n\n    const [y, x] = position;\n\n    let playerAtPosition = null;\n    if (gameState?.userData.filter((playerData) => playerData.position && playerData.position === [y, x])) {\n        playerAtPosition = gameState.userData.filter((playerData) => playerData.position && playerData.position[0] === y && playerData.position[1] === x)[0]\n    }\n\n    const actionCost = useMemo(() => {\n        if (gameState) {\n            const shotDistanceX = Math.abs(gameState.player.position[1] - position[1])\n            const shotDistanceY = Math.abs(gameState.player.position[0] - position[0])\n            console.log(Math.max(shotDistanceY, shotDistanceX))\n            return Math.max(Math.max(shotDistanceY, shotDistanceX) - 2, 0);\n        } else {\n            return 0;\n        }\n    }, [gameState, position])\n\n    const onSubmit = () => {\n        sendAction(id, action, position, actionCost)\n    }\n\n    const disabled = !(gameState?.player?.supply > 0) || isLoading;\n\n    const submitDisabled = actionCost > gameState?.player.supply - 1 || disabled\n\n    const availableUpgrades = gameState ? Math.max(gameState.player.supply - 1, 0) : 0\n    return (\n        <>\n            <Typography>\n                ({position[1]},{position[0]})\n            </Typography>\n            <FormControl component=\"fieldset\">\n                <FormLabel component=\"legend\">Actions (base cost 1)</FormLabel>\n                <RadioGroup row onChange={(event) => setAction(event.target.value)} value={action}>\n                    <FormControlLabel value=\"move\" control={<Radio/>} label=\"Move\"\n                                      disabled={disabled}/>\n                    <FormControlLabel value=\"fireRound\" control={<Radio/>} label=\"Fire Round\"\n                                      disabled={disabled || !playerAtPosition}/>\n                    <FormControlLabel value=\"fireSupply\" control={<Radio/>} label=\"Fire Supply\"\n                                      disabled={disabled || !playerAtPosition}/>\n                </RadioGroup>\n            </FormControl>\n            <FormLabel component=\"legend\">Upgrades</FormLabel>\n            <Typography>\n                Required: {actionCost}\n            </Typography>\n            <Typography>\n                Available: {availableUpgrades}\n            </Typography>\n            <div className={classes.submitContainer}>\n                <div className={classes.loadingButtonContainer}>\n                    <Button type=\"submit\" variant=\"contained\" disabled={submitDisabled} onClick={onSubmit}>\n                        Submit\n                    </Button>\n                    {isLoading && <CircularProgress size={24} className={classes.buttonProgress}/>}\n                </div>\n                {submitDisabled ? <Typography className={classes.submitErrorMessage}>\n                    Insufficient Supply!\n                </Typography> : ''}\n            </div>\n        </>\n    )\n}\n\nconst useStyles = makeStyles(() => ({\n    submitContainer: {\n        display: 'flex',\n        flexDirection: 'row',\n    },\n    submitErrorMessage: {\n        alignSelf: 'center',\n        color: 'red',\n        margin: '2px'\n    },\n    loadingButtonContainer: {\n        position: 'relative',\n    },\n    buttonProgress: {\n        color: green[500],\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        marginTop: -12,\n        marginLeft: -12,\n    },\n}))","import {Button, Typography} from \"@material-ui/core\";\nimport {useContext} from \"react\";\nimport {GameStateContext} from \"../prodivers/GameStateProvider\";\nimport {LiveDataContext} from \"../prodivers/LiveDataProvider\";\nimport {useParams} from \"react-router-dom\";\n\nexport default function DeadActions({position}) {\n\n    const {gameState} = useContext(GameStateContext)\n    const {sendAction} = useContext(LiveDataContext)\n    const {id} = useParams();\n    const [y, x] = position;\n\n    let playerAtPosition = null;\n    if (gameState?.userData.filter((playerData) => playerData.position && playerData.position === [y, x])) {\n        playerAtPosition = gameState.userData.filter((playerData) => playerData.position && playerData.position[0] === y && playerData.position[1] === x)[0]\n    }\n\n    function handleSubmit() {\n        sendAction(id, 'vote', position, 0)\n    }\n\n    return (\n        <>\n            {\n                playerAtPosition ?\n                    <div style={{display: 'flex', flexDirection: 'column'}}>\n                        <Typography>\n                            You have {playerAtPosition.votes} votes\n                        </Typography>\n                        <Typography>\n                            {playerAtPosition.name} currently has {playerAtPosition.votesForToday}/3 votes\n                        </Typography>\n                        <Button onClick={handleSubmit} variant=\"contained\">\n                            Vote For {playerAtPosition.name}\n                        </Button>\n                    </div> : `Select a Players Position to Vote for Them`\n            }\n        </>\n    )\n}","import {useContext, useState} from \"react\";\nimport {\n    ClickAwayListener,\n    Fade, makeStyles,\n    Paper,\n    Popper,\n} from \"@material-ui/core\";\nimport {GameStateContext} from \"../prodivers/GameStateProvider\";\nimport AliveActions from \"./AliveActions\";\nimport DeadActions from \"./DeadActions\";\n\nexport default function wrapWithActionPrompt(position, component) {\n    return (\n        <ActionPrompt position={position}>\n            {component}\n        </ActionPrompt>\n    )\n}\n\nexport function ActionPrompt({position, children}) {\n    const [open, setOpen] = useState(false);\n    const [anchorEl, setAnchorEl] = useState(null);\n    const {gameState} = useContext(GameStateContext)\n    const classes = useStyles();\n\n    const onClickAway = () => {\n        setOpen(false);\n    }\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n        setOpen(!open)\n    };\n\n\n    return (\n        <div className={classes.container} key={`${position[1]}_${[position[0]]}`}>\n            {open && <img src={\"https://freepngimg.com/thumb/target/6-2-target-picture.png\"} className={classes.target} alt=\"target\"/>}\n            <div onClick={handleClick} className={classes.anchor}>\n                {children}\n            </div>\n            {open && <ClickAwayListener onClickAway={onClickAway}>\n                <Popper open={open} transition anchorEl={anchorEl}>\n                    {({TransitionProps}) => (\n                        <Fade {...TransitionProps}>\n                            <Paper className={classes.paper}>\n                                {gameState?.player.alive ?\n                                    <AliveActions position={position}/> :\n                                    <DeadActions position={position}/>\n                                }\n                            </Paper>\n                        </Fade>\n                    )}\n                </Popper>\n            </ClickAwayListener>}\n        </div>\n    )\n}\n\nconst useStyles = makeStyles({\n    anchor: {\n        height: '100%',\n        width: '100%',\n    },\n    container: {\n        position: \"relative\",\n        height: '100%',\n        width: '100%'\n    },\n    target: {\n        maxWidth: 50,\n        position: 'absolute',\n        top: '50%',\n        transform: 'translate(-50%, -50%)'\n    },\n    paper: {\n        padding: '10px',\n    }\n})","import {Hidden, makeStyles, Typography} from \"@material-ui/core\";\n\nexport default function TankSpace({health, supply, name, id}) {\n\n    const classes = useStyles();\n\n    return (\n        <div style={{display: 'flex', flexDirection: 'column', padding: 2, backgroundColor: \"rgb(211,211,211,0.8)\"}}\n             key={id}>\n            <div className={classes.topContainer}>\n                <img src={\"https://creazilla-store.fra1.digitaloceanspaces.com/cliparts/28562/tank-1-clipart-md.png\"}\n                     className={classes.img} alt=\"Tank\"/>\n                <Hidden smDown>\n                    <Typography className={classes.name}>\n                        {name}\n                    </Typography>\n                </Hidden>\n            </div>\n            <div style={{display: 'flex', flexWrap: 'nowrap', alignSelf: 'center'}}>\n                <div className={classes.statContainer}>\n                    <Hidden mdDown>\n                        <img src={\"https://static.thenounproject.com/png/2111027-200.png\"}\n                             className={classes.img} alt=\"supply\"/>\n                        <Typography>\n                            {supply}\n                        </Typography>\n                    </Hidden>\n                </div>\n                <div className={classes.statContainer}>\n                    <Hidden mdDown>\n                        <img\n                            src={\"https://upload.wikimedia.org/wikipedia/commons/thumb/f/f1/Heart_coraz%C3%B3n.svg/1200px-Heart_coraz%C3%B3n.svg.png\"}\n                            className={classes.img} alt=\"health\"/>\n                        <Typography>\n                            {health}\n                        </Typography>\n                    </Hidden>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst useStyles = makeStyles(() => ({\n    statContainer: {\n        display: 'flex',\n        flexWrap: \"wrap\"\n    },\n    topContainer: {\n        display: 'inline-flex',\n        alignSelf: 'center',\n        flexWrap: \"wrap\"\n    },\n    name: {\n        flex: 1\n    },\n    img: {maxHeight: 20, maxWidth: 20, alignSelf: 'center', placeContent: 'center'}\n}))","import {\n    useHistory,\n    useLocation\n} from \"react-router-dom\";\n\nexport default function useQuery() {\n    const history = useHistory();\n    const params = new URLSearchParams(useLocation().search);\n\n    function updateParams() {\n        history.replace({\n            search: params.toString(),\n        })\n    }\n\n    return { params, updateParams}\n}","import {makeStyles, Paper} from \"@material-ui/core\";\nimport {useContext, useMemo} from \"react\";\nimport {GameStateContext} from \"../prodivers/GameStateProvider\";\nimport getDistanceBetweenPositions from \"../../utilities/getDistanceBetweenPositions\";\nimport wrapWithActionPrompt from \"../actions/ActionPrompt\";\nimport TankSpace from \"../TankSpace\";\nimport useQuery from \"../../hooks/useQuery\";\n\nexport default function GameBoardV2() {\n\n    const {gameState} = useContext(GameStateContext);\n    const {params} = useQuery();\n\n    const classes = useStyles({gameState});\n\n    const gridLayout = useMemo(() => {\n            const isDarkMode = params.has('darkMode');\n            const gridColor = isDarkMode ? '#000000' : \"#D3D3D3\"\n            const stripeFactory = (stripeColor) => `repeating-linear-gradient(-45deg,  ${stripeColor},  ${stripeColor} 10px,  ${gridColor} 10px, ${gridColor} 20px)`\n            const backgroundColors = [stripeFactory(\"#5C8248FF\"), stripeFactory(\"#FFB862\"), stripeFactory(\"#FF6262\")]\n            const components = []\n\n            const generateInternalComponents = (y) => {\n                const internalComponents = []\n                for (let x = -1; x < gameState.bounds[1]; x++) {\n                    let playerAtPosition = null;\n                    if (gameState?.userData.filter((playerData) => playerData.position && playerData.position === [y, x])) {\n                        playerAtPosition = gameState.userData.filter((playerData) => playerData.position && playerData.position[0] === y && playerData.position[1] === x)[0]\n                    }\n\n                    // Range indicator\n                    const distanceFromPlayer = getDistanceBetweenPositions(gameState?.player.position, [y, x])\n                    let background = gridColor;\n                    if (params.has('rangeIndicator') && distanceFromPlayer < 3) {\n                        background = backgroundColors[distanceFromPlayer]\n                    }\n\n                    let itemToPush = (\n                        <Paper style={{\n                            textAlign: 'center',\n                            flex: 1,\n                            background: background,\n                            cursor: 'pointer',\n                            boxSizing: 'border-box',\n                            height: '100%',\n                            width: '100%',\n                            border: isDarkMode ? \"thin dotted lightgray\" : ''\n                        }} key={`${x}_${y}`}>\n                            {wrapWithActionPrompt([y, x], playerAtPosition ?\n                                <TankSpace health={playerAtPosition.health} supply={playerAtPosition.supply}\n                                           name={playerAtPosition.name} id={`${x}${y}`}/> :\n                                <div className={classes.blankSpace} id={`${x}${y}`} key={`${x}${y}`}/>)}\n                        </Paper>)\n                    if (x === -1 || y === -1) {\n                        if (x === -1 && y === -1) {\n                            itemToPush = (<div style={{width: '20px'}} key={`${x} ${y}`}/>)\n                        } else {\n                            const indexNum = x === -1 ? y : x;\n                            const maxWidth = y === -1 ? '100%' : '20px'\n                            itemToPush = (\n                                <div style={{\n                                    flex: 1,\n                                    alignSelf: 'center',\n                                    maxWidth: maxWidth,\n                                    color: 'white'\n                                }} id={`${x}${y}`} key={`${x} ${y}`}> {indexNum} </div>)\n                        }\n                    }\n                    components.push(itemToPush)\n                }\n                return internalComponents;\n            }\n\n            if (gameState) {\n                for (let i = -1; i < gameState.bounds[0]; i++) {\n                    generateInternalComponents(i)\n                }\n            }\n            return components;\n        },\n        [classes.blankSpace, gameState, params]\n    );\n\n    return (\n        <div className={classes.containerGrid}>\n            {gridLayout}\n        </div>\n    )\n}\n\nconst useStyles = makeStyles({\n    containerGrid: {\n        backgroundColor: 'slategray',\n        height: '100%',\n        display: 'grid',\n        gridTemplateColumns: ({gameState}) => `20px repeat(${gameState ? gameState.bounds[1] : 'auto-fill'}, 1fr)`,\n        gridTemplateRows: ({gameState}) => `20px repeat(${gameState ? gameState.bounds[0] : 'auto-fill'}, 1fr)`\n    },\n    paper: {\n        height: '100%',\n        width: '100%',\n    },\n    blankSpace: {\n        height: '100%',\n        width: '100%',\n        minWidth: '30px'\n    }\n})","export default function getDistanceBetweenPositions(pos1, pos2) {\n    if (!pos1) {\n        return 1000\n    }\n    const distanceBetweenX = Math.abs(pos1[1] - pos2[1])\n    const distanceBetweenY = Math.abs(pos1[0] - pos2[0])\n\n    return Math.max(distanceBetweenX, distanceBetweenY);\n}","import {useContext, useMemo} from \"react\";\nimport {GameStateContext} from \"../prodivers/GameStateProvider\";\nimport {Chip, Divider, Drawer, makeStyles, Paper, Typography} from \"@material-ui/core\";\nimport HowToVoteIcon from '@material-ui/icons/HowToVote';\nimport TaskIcon from '@material-ui/icons/Note';\n\nexport default function JuryDrawer({open, setOpen}) {\n\n    const {gameState} = useContext(GameStateContext);\n    const classes = useStyles();\n\n    const deadPlayers = useMemo(() => {\n        if (gameState) {\n            return gameState.userData.filter((user) => !user.alive)\n        }\n        return [];\n    }, [gameState]);\n\n    const alivePlayers = useMemo(() => {\n        if (gameState) {\n            return gameState.userData.filter((user) => user.alive)\n        }\n        return [];\n    }, [gameState]);\n\n    return (\n        <Drawer open={open} anchor=\"left\" onClose={() => setOpen(false)}  classes={{paper: classes.drawer}}>\n            <Paper className={classes.container}>\n                <div>\n                    <Typography className={classes.type}>\n                        The Esteemed Jury\n                    </Typography>\n                    <Divider/>\n                    {deadPlayers.map((player) => (\n                        <Paper className={classes.paper} key={player.name}>\n                            <Typography className={classes.playerName}>\n                                {player.name}\n                            </Typography>\n                            <Chip\n                                icon={<TaskIcon/>}\n                                variant=\"outlined\"\n                                label={player.votes}\n                            />\n                        </Paper>\n                    ))}\n                </div>\n                <div>\n                    <Typography className={classes.type}>\n                        Votes For the Living\n                    </Typography>\n                    <Divider/>\n                    {alivePlayers.map((player) => (\n                        <Paper className={classes.paper} key={player.name}>\n                            <Typography className={classes.playerName}>\n                                {player.name}\n                            </Typography>\n                            <Chip\n                                icon={<HowToVoteIcon/>}\n                                variant=\"outlined\"\n                                label={`${player.votesForToday} / 3 `}\n                            />\n                        </Paper>\n                    ))}\n                </div>\n            </Paper>\n        </Drawer>\n    )\n}\n\nconst useStyles = makeStyles({\n    container: {\n        backgroundColor: 'transparent',\n        padding: '10px',\n        height: '100%'\n    },\n    drawer: {\n        backgroundColor: 'slategray'\n    },\n    paper: {\n        padding: 5,\n        margin: 5,\n        display: 'flex',\n        placeContent: 'space-evenly'\n    },\n    type: {\n        color: 'white',\n        placeContent: 'center',\n    },\n    chip: {\n        justifyContent: 'center'\n    },\n    playerName: {\n        alignSelf: 'center',\n        marginRight: '10px'\n    }\n});","import {makeStyles, Switch, Typography} from \"@material-ui/core\";\nimport useQuery from \"../../hooks/useQuery\";\n\nexport default function RangeToggle() {\n\n    const { params, updateParams } = useQuery();\n    const classes = useStyles();\n\n    function handleSwitch(event) {\n        if (event.target.checked) {\n            params.set('rangeIndicator', \"1\");\n            updateParams();\n        } else {\n            params.delete('rangeIndicator')\n            updateParams();\n        }\n    }\n\n    return (\n        <div className={classes.container}>\n            <Typography className={classes.text}>\n                Range Indicator\n            </Typography>\n            <Switch\n                checked={params.get('rangeIndicator')}\n                onChange={handleSwitch}\n                name=\"checkedA\"\n                inputProps={{ 'aria-label': 'secondary checkbox' }}\n                color=\"primary\"\n            />\n        </div>\n    )\n}\n\nconst useStyles = makeStyles({\n    container: {\n        margin: 10,\n        display: 'inline-flex',\n        marginTop: 'auto',\n    },\n    text: {\n        alignSelf: 'center',\n        color: 'white',\n        marginRight: 'auto'\n    }\n});","import {makeStyles, Switch, Typography} from \"@material-ui/core\";\nimport useQuery from \"../../hooks/useQuery\";\n\nexport default function DarkModeToggle() {\n\n    const { params, updateParams } = useQuery();\n    const classes = useStyles();\n\n    function handleSwitch(event) {\n        if (event.target.checked) {\n            params.set('darkMode', \"1\");\n            updateParams();\n        } else {\n            params.delete('darkMode')\n            updateParams();\n        }\n    }\n\n    return (\n        <div className={classes.container}>\n            <Typography className={classes.text}>\n                Dark Mode\n            </Typography>\n            <Switch\n                checked={params.get('darkMode')}\n                onChange={handleSwitch}\n                inputProps={{ 'aria-label': 'secondary checkbox' }}\n                color=\"primary\"\n            />\n        </div>\n    )\n}\n\nconst useStyles = makeStyles({\n    container: {\n        margin: 10,\n        display: 'inline-flex',\n    },\n    text: {\n        alignSelf: 'center',\n        color: 'white',\n        marginRight: 'auto'\n    }\n});","import {Drawer, List, ListItem, ListItemIcon, ListItemText, makeStyles, Paper } from \"@material-ui/core\";\nimport HistoryIcon from \"@material-ui/icons/History\";\nimport GavelIcon from \"@material-ui/icons/Gavel\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\"\nimport RangeToggle from \"../toggles/RangeToggle\";\nimport DarkModeToggle from \"../toggles/DarkModeToggle\";\n\nexport default function MenuDrawer({open, setIsOpen, setIsJuryOpen, setIsStatsOpen, setIsHistoryOpen}) {\n\n    const classes = useStyles();\n\n    return (\n        <Drawer open={open} anchor=\"left\" onClose={() => setIsOpen(false)} classes={{paper: classes.drawer}}>\n            <Paper className={classes.container}>\n                <List>\n                    <ListItem button key={'history'} className={classes.icon} onClick={() => {\n                        setIsHistoryOpen(true);\n                        setIsOpen(false);\n                    }}>\n                        <ListItemIcon className={classes.icon}>\n                            <HistoryIcon/>\n                        </ListItemIcon>\n                        <ListItemText primary={\"History\"} />\n                    </ListItem>\n                    <ListItem button key={'jury'} className={classes.icon} onClick={() => {\n                        setIsOpen(false);\n                        setIsJuryOpen(true);\n                    }}>\n                        <ListItemIcon className={classes.icon}>\n                            <GavelIcon/>\n                        </ListItemIcon>\n                        <ListItemText primary={\"Jury\"}/>\n                    </ListItem>\n                    <ListItem button key={'stats'} className={classes.icon} onClick={() => {\n                        setIsOpen(false);\n                        setIsStatsOpen(true);\n                    }}>\n                        <ListItemIcon className={classes.icon}>\n                            <FavoriteIcon/>\n                        </ListItemIcon>\n                        <ListItemText primary={\"Stats\"}/>\n                    </ListItem>\n                </List>\n                <RangeToggle />\n                <DarkModeToggle />\n            </Paper>\n        </Drawer>\n    )\n}\n\nconst useStyles = makeStyles({\n    container: {\n        backgroundColor: 'transparent',\n        height: '100%',\n        display: 'contents'\n    },\n    paper: {\n        padding: 5,\n        margin: 5\n    },\n    drawer: {\n        backgroundColor: 'slategray',\n        width: '200px'\n    },\n    icon: {\n        color: 'white'\n    }\n});","import {useContext} from \"react\";\nimport {GameStateContext} from \"../prodivers/GameStateProvider\";\nimport {Drawer, makeStyles, Paper, Typography} from \"@material-ui/core\";\n\nexport default function StatDrawer({isOpen, setIsOpen}) {\n\n    const {gameState} = useContext(GameStateContext);\n    const classes = useStyles();\n\n    return (\n        <Drawer open={isOpen} anchor=\"left\" onClose={() => setIsOpen(false)} classes={{paper: classes.drawer}}>\n            <Paper className={classes.container}>\n                <div className={classes.gridContainer}>\n                    {gameState && gameState.userData.map(userData => (\n                        <Paper className={classes.paper} key={userData.name}>\n                            <div>\n                                <Typography align={\"center\"}>\n                                    {userData.name}\n                                </Typography>\n                                <div className={classes.statContainer}>\n                                    <div className={classes.statContainer}>\n                                        <img src={\"https://static.thenounproject.com/png/2111027-200.png\"}\n                                             className={classes.img} alt=\"supply\"/>\n                                        <Typography>\n                                            {userData.supply}\n                                        </Typography>\n                                    </div>\n                                    <div className={classes.statContainer}>\n                                        <img\n                                            src={\"https://upload.wikimedia.org/wikipedia/commons/thumb/f/f1/Heart_coraz%C3%B3n.svg/1200px-Heart_coraz%C3%B3n.svg.png\"}\n                                            className={classes.img} alt=\"health\"/>\n                                        <Typography>\n                                            {userData.health}\n                                        </Typography>\n                                    </div>\n                                </div>\n                            </div>\n                        </Paper>\n                    ))}\n                </div>\n            </Paper>\n        </Drawer>\n    )\n}\n\nconst useStyles = makeStyles({\n    text: {\n      color: 'white'\n    },\n    container: {\n        backgroundColor: 'transparent',\n        height: '100%'\n    },\n    paper: {\n        padding: 5,\n        margin: 5\n    },\n    drawer: {\n        backgroundColor: 'slategray',\n    },\n    gridContainer: {\n        display: 'grid',\n        gridTemplateColumns: 'repeat(3, 1fr)'\n    },\n    statContainer: {\n        display: 'flex',\n        flexDirection: 'row',\n        placeContent: 'space-around'\n    },\n    img: {maxHeight: 20, maxWidth: 20, alignSelf: 'center', placeContent: 'center'}\n});","import {AppBar, IconButton, Typography} from \"@material-ui/core\";\nimport {useContext, useState} from \"react\";\nimport {GameStateContext} from \"./prodivers/GameStateProvider\";\nimport Countdown from \"react-countdown\";\nimport MenuIcon from '@material-ui/icons/Menu';\nimport HistoryDrawer from \"./drawers/HistoryDrawer\";\nimport GameBoardV2 from \"./gameboard/GameboardV2\";\nimport JuryDrawer from \"./drawers/JuryDrawer\";\nimport MenuDrawer from \"./drawers/MenuDrawer\";\nimport StatDrawer from \"./drawers/StatDrawer\";\n\nexport default function AppBody() {\n    const {gameState} = useContext(GameStateContext);\n    const [historyDrawerOpen, setHistoryDrawerOpen] = useState(false);\n    const [juryDrawerOpen, setJuryDrawerOpen] = useState(false);\n    const [menuDrawerOpen, setMenuDrawerOpen] = useState(false);\n    const [statsDrawerOpen, setStatsDrawerOpen] = useState(false);\n\n    function handleMenuClick() {\n        setMenuDrawerOpen((isOpen) => !isOpen)\n    }\n\n    return (\n        <div style={{height: '100%', display: 'flex', flexDirection: 'column'}}>\n            <AppBar position=\"sticky\" style={{flex: 0}}>\n                <div style={{display: 'flex', flexDirection: 'row'}}>\n                    <IconButton style={{color: 'white'}} size={\"small\"} onClick={handleMenuClick}>\n                        <MenuIcon/>\n                    </IconButton>\n                    <Typography style={{padding: 5}}>\n                        {gameState?.player.name}\n                    </Typography>\n                    {gameState?.player.alive ?\n                        <>\n                            <Typography style={{padding: 5}}>\n                                Supply: {gameState?.player.supply}\n                            </Typography>\n                            <Typography style={{padding: 5}}>\n                                Health: {gameState?.player.health}\n                            </Typography>\n                        </>\n                        : <Typography style={{padding: 5}}>\n                            Votes: {gameState?.player.votes}\n                        </Typography>}\n                    {!gameState?.player.alive ?\n                        <Typography style={{padding: 5}}>\n                            You are dead\n                        </Typography> : ''\n                    }\n                    {gameState?.nextResupplyTime ?\n                        <>\n                            <Typography style={{padding: 5, marginLeft: 'auto'}}>\n                                Resupply in:\n                            </Typography>\n                            <div style={{padding: 5}}>\n                                <Countdown date={Date.parse(gameState?.nextResupplyTime)}/>\n                            </div>\n                        </>\n                        : ''\n                    }\n                </div>\n            </AppBar>\n            <StatDrawer isOpen={statsDrawerOpen} setIsOpen={setStatsDrawerOpen} />\n            <MenuDrawer open={menuDrawerOpen} setIsOpen={setMenuDrawerOpen} setIsHistoryOpen={setHistoryDrawerOpen}\n                        setIsJuryOpen={setJuryDrawerOpen} setIsStatsOpen={setStatsDrawerOpen}/>\n            <HistoryDrawer open={historyDrawerOpen} setOpen={setHistoryDrawerOpen}/>\n            <JuryDrawer open={juryDrawerOpen} setOpen={setJuryDrawerOpen}/>\n            <GameBoardV2/>\n        </div>\n    )\n}","import {TextField} from \"@material-ui/core\";\nimport {useState} from \"react\";\nimport {checkValidId} from \"../utilities/fetchGameData\";\nimport {Redirect} from \"react-router-dom\"\n\nexport default function Login() {\n    const [value, setValue] = useState('');\n    const [validID, setValidID] = useState(null);\n    const [errorMessage, setErrorMessage] = useState('');\n\n    async function onKeyDown(e) {\n        if (e.keyCode === 13) {\n            const isValidId = await checkValidId(e.target.value);\n            if (isValidId) {\n                setValidID(e.target.value);\n            } else {\n                setErrorMessage(\"Invalid Player ID\");\n            }\n        }\n    }\n\n    function handleChange(e) {\n        setValue(e.target.value);\n    }\n\n    return (\n        <div style={{backgroundColor: 'lightslategrey', height: '100vh'}}>\n            <TextField style={{position: 'absolute', top: '50%', transform: 'translate(-50%, -50%)'}}\n                       onSubmit={() => console.log('tada')} onKeyDown={onKeyDown} value={value} onChange={handleChange}\n                       error={errorMessage !== ''} helperText={errorMessage}/>\n            {validID ? <Redirect to={`${validID}`}/> : ''}\n        </div>\n    )\n}","import useIsValidID from \"../hooks/useIsValidID\";\nimport {Redirect} from \"react-router-dom\";\nimport {CircularProgress} from \"@material-ui/core\";\nimport {\nuseParams\n} from \"react-router-dom\";\n\nexport default function ValidIdWrapper({children}) {\n    const { id } = useParams()\n    const {isValidID, isLoading} = useIsValidID(id)\n\n    return (\n        <div>\n            {!isLoading && isValidID && children}\n            {isValidID === false && !isLoading && <Redirect to={\"/\"}/>}\n            {isLoading && <CircularProgress  /> }\n        </div>\n    )\n}","import {useEffect, useState} from \"react\";\nimport {checkValidId} from \"../utilities/fetchGameData\";\n\nexport default function useIsValidID(id) {\n    const [isValidID, setIsValidId] = useState();\n    const [isLoading, setIsLoading] = useState(true);\n\n    useEffect( () => {\n        if (id) {\n            checkValidId(id).then((result) => {\n                setIsValidId(result)\n            }).finally(() => setIsLoading(false));\n        }\n    }, [id, setIsValidId])\n    \n    return {isValidID, isLoading};\n}","import axios from \"axios\";\nimport {useEffect, useState} from \"react\";\nimport {Redirect} from \"react-router-dom\";\n\n\nexport default function AdminLogin() {\n\n    const baseURL = \"https://TankTacticsService.drewcolgin.repl.co/\";\n    const [id, setID] = useState();\n\n    async function generateID() {\n        const response = await axios.get(`${baseURL}api/generate`)\n        return response.data;\n    }\n\n    async function registerID(id, name) {\n        await axios.put(`${baseURL}api/register/${id}`, {name})\n    }\n\n    useEffect(() => {\n        generateID().then(id => registerID(id, id).then(() => setID(id)))\n    }, [])\n\n\n    return (\n        <div>\n            {id && <Redirect to={`/${id}`}/>}\n        </div>\n    )\n}","import useQuery from \"../hooks/useQuery\";\nimport {useCallback, useEffect} from \"react\";\n\nexport default function KeyEventListener({children}) {\n\n    const {params, updateParams} = useQuery();\n\n    const handleKeyDown = useCallback((event) => {\n        function handleKeyDown(event) {\n\n            console.log(event.code);\n            if (event.code === 'KeyD') {\n                if (params.has('darkMode')) {\n                    params.delete('darkMode')\n                } else {\n                    params.set('darkMode', \"1\")\n                }\n                updateParams();\n            } else if (event.code === 'KeyR') {\n                if (params.has('rangeIndicator')) {\n                    params.delete('rangeIndicator')\n                } else {\n                    params.set('rangeIndicator', \"1\")\n                }\n                updateParams();\n            }\n        }\n\n        handleKeyDown(event);\n    }, [params, updateParams])\n\n    useEffect(() => {\n        document.addEventListener('keydown', handleKeyDown);\n\n        return () => {\n            document.removeEventListener('keydown', handleKeyDown)\n        }\n    }, [handleKeyDown])\n\n    return children\n}","import {HashRouter as Router, Route, Switch} from \"react-router-dom\";\nimport AppBody from \"./components/AppBody\";\nimport Login from \"./components/Login\";\nimport ValidIdWrapper from \"./components/ValidIDWrapper\";\nimport LiveDataProvider from \"./components/prodivers/LiveDataProvider\";\nimport GameStateProvider from \"./components/prodivers/GameStateProvider\";\nimport AdminLogin from \"./components/AdminLogin\";\nimport {SnackbarProvider} from \"notistack\";\nimport KeyEventListener from \"./components/KeyEventListener\";\n\nexport default function AppRouter() {\n    return (\n        <Router style={{height: '100%'}} basename={\"/tank-tactics\"}>\n            <Switch style={{height: '100%'}}>\n                <Route exact path=\"/\" style={{height: '100%'}}>\n                    <Login/>\n                </Route>\n                <Route exact path=\"/admin\">\n                    <AdminLogin/>\n                </Route>\n                <Route path=\"/:id\">\n                    <ValidIdWrapper>\n                        <SnackbarProvider anchorOrigin={{vertical: 'top', horizontal: 'center'}}>\n                            <GameStateProvider>\n                                <LiveDataProvider>\n                                    <KeyEventListener>\n                                        <AppBody/>\n                                    </KeyEventListener>\n                                </LiveDataProvider>\n                            </GameStateProvider>\n                        </SnackbarProvider>\n                    </ValidIdWrapper>\n                </Route>\n            </Switch>\n        </Router>\n    )\n}","import './App.css';\nimport AppRouter from \"./Router\";\n\nfunction App() {\n\n  return (\n    <div className=\"App\" style={{height: '100%'}}>\n      <AppRouter />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport TimeAgo from 'javascript-time-ago';\nimport en from 'javascript-time-ago/locale/en';\nTimeAgo.addDefaultLocale(en)\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}